buildscript {
    repositories {
        jcenter()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
    }

    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.0-SNAPSHOT'
        classpath('nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0') {
            exclude module: 'guava'
        }
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
    }
}

apply plugin: 'net.minecraftforge.gradle.tweaker-server'
ext.minecraftPlugin = plugins.getPlugin('net.minecraftforge.gradle.tweaker-server')
ext.DIR_MCP_MAPPINGS = net.minecraftforge.gradle.common.Constants.DIR_MCP_MAPPINGS
apply from: project(':SpongeCommon').file('gradle/implementation.gradle')

minecraft {
    tweakClass = 'org.spongepowered.vanilla.launch.server.VanillaServerTweaker'
}

configurations {
    // While we could set this to 'runtime', Eclipse doesn't support runtime dependencies
    // properly so this was always going before 'compile' in Eclipse
    shadow
}

dependencies {
    compile 'org.ow2.asm:asm-debug-all:5.0.4'
    compile 'jline:jline:2.12.1'

    shadow 'org.ow2.asm:asm-all:5.0.4'
}

// Set main class and classpath for Minecraft server and Launchwrapper
jar {
    manifest {
        attributes(
                'Main-Class': 'org.spongepowered.vanilla.launch.server.VanillaServerMain',
                'Class-Path': 'minecraft_server.1.8.jar lib/launchwrapper-1.12.jar'
        )
    }
}

shadowJar {
    // Include production log4j2.xml
    rename 'log4j2_prod.xml', 'log4j2.xml'

    configurations += [project.configurations.shadow]

    from minecraftPlugin.delayedFile('{SRG_DIR}/notch-srg.srg')
    rename 'notch-srg.srg', 'mappings.srg'

    dependencies {
        include dependency('net.sf.jopt-simple:jopt-simple')
        include dependency('org.ow2.asm:asm-all')

        include dependency('com.typesafe:config')

        include dependency('jline:jline')
    }
}
